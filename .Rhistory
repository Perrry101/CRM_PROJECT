interactive_revenue <- ggplotly(p_revenue_segment)
install.packages("plotly")
library(plotly);
# 5. INTERACTIVE PLOTLY VERSION (Optional)
# Convert main plots to interactive for digital presentations
interactive_revenue <- ggplotly(p_revenue_segment)
interactive_risk <- ggplotly(p_risk_analysis)
# Save plots for presentation
ggsave("rfm_executive_dashboard.png", executive_dashboard, width = 16, height = 12, dpi = 300)
ggsave("revenue_by_segment.png", p_revenue_segment, width = 12, height = 8, dpi = 300)
segment_summary <- rfm_segments %>%
group_by(Customer_Segment) %>%
summarise(
Customer_Count = n(),
Avg_Monetary = mean(Monetary, na.rm = TRUE),
Total_Revenue = sum(Monetary, na.rm = TRUE),
Avg_Frequency = mean(Frequency, na.rm = TRUE),
Avg_Recency = mean(Recency, na.rm = TRUE),
.groups = 'drop'
) %>%
arrange(desc(Total_Revenue))
segment_summary <- rfm_segments %>%
group_by(Customer_Segment) %>%
summarise(
Customer_Count = n(),
Avg_Monetary = mean(Monetary, na.rm = TRUE),
Total_Revenue = sum(Monetary, na.rm = TRUE),
Avg_Frequency = mean(Frequency, na.rm = TRUE),
Avg_Recency = mean(Recency, na.rm = TRUE),
.groups = 'drop'
) %>%
arrange(desc(Total_Revenue))
####################################################################################################
rfm_segments <- rfm %>%
mutate(
Customer_Segment = case_when(
RFM_Score >= 13 ~ "Champions",
RFM_Score >= 11 ~ "Loyal Customers",
RFM_Score >= 9 ~ "Potential Loyalists",
RFM_Score >= 7 ~ "New Customers",
RFM_Score >= 5 ~ "At Risk",
TRUE ~ "Lost Customers"
)
)
rfm <- RFM_UK %>%
group_by(CustomerID) %>%
summarise(
Recency = as.integer(difftime(max_date, max(InvoiceDate), units = "days")),
Frequency = n_distinct(StockCode),                 # simple proxy
Monetary = sum(Revenue, na.rm = TRUE)
) %>%
ungroup() %>%
mutate(
R_Score = ntile(-Recency, 5),                      # lower recency -> higher score
F_Score = ntile(Frequency, 5),
M_Score = ntile(Monetary, 5),
RFM_Score = R_Score + F_Score + M_Score
) %>%
arrange(desc(RFM_Score))
source("D:/SQL_PROJECT/R_ANALYSIS/analysis101.R")
segment_summary <- rfm_segments %>%
group_by(Customer_Segment) %>%
summarise(
Customer_Count = n(),
Avg_Monetary = mean(Monetary, na.rm = TRUE),
Total_Revenue = sum(Monetary, na.rm = TRUE),
Avg_Frequency = mean(Frequency, na.rm = TRUE),
Avg_Recency = mean(Recency, na.rm = TRUE),
.groups = 'drop'
) %>%
arrange(desc(Total_Revenue))
####################################################################################################
rfm_segments <- rfm %>%
mutate(
Customer_Segment = case_when(
RFM_Score >= 13 ~ "Champions",
RFM_Score >= 11 ~ "Loyal Customers",
RFM_Score >= 9 ~ "Potential Loyalists",
RFM_Score >= 7 ~ "New Customers",
RFM_Score >= 5 ~ "At Risk",
TRUE ~ "Lost Customers"
)
)
p_revenue_segment <- ggplot(segment_summary, aes(x = reorder(Customer_Segment, Total_Revenue),
y = Total_Revenue,
fill = Customer_Segment)) +
geom_col(alpha = 0.8) +
geom_text(aes(label = paste0("£", round(Total_Revenue/1000, 1), "K")),
hjust = -0.1, size = 4, fontface = "bold") +
coord_flip() +
scale_fill_brewer(type = "qual", palette = "Set2") +
scale_y_continuous(labels = dollar_format(prefix = "£", scale = 1e-3, suffix = "K")) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank()) +
labs(
title = "Total Revenue by Customer Segment",
subtitle = "Champions and Loyal Customers drive the majority of revenue",
x = "Customer Segment",
y = "Total Revenue (£K)",
caption = "Source: RFM Analysis - UK Customers"
)
p_revenue_segment <- ggplot(segment_summary, aes(x = reorder(Customer_Segment, Total_Revenue),
y = Total_Revenue,
fill = Customer_Segment)) +
geom_col(alpha = 0.8) +
geom_text(aes(label = paste0("£", round(Total_Revenue/1000, 1), "K")),
hjust = -0.1, size = 4, fontface = "bold") +
coord_flip() +
scale_fill_brewer(type = "qual", palette = "Set2") +
scale_y_continuous(labels = dollar_format(prefix = "£", scale = 1e-3, suffix = "K")) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank()) +
labs(
title = "Total Revenue by Customer Segment",
subtitle = "Champions and Loyal Customers drive the majority of revenue",
x = "Customer Segment",
y = "Total Revenue (£K)",
caption = "Source: RFM Analysis - UK Customers"
)
p_revenue_segment <- ggplot(segment_summary, aes(x = reorder(Customer_Segment, Total_Revenue),
y = Total_Revenue,
fill = Customer_Segment)) +
geom_col(alpha = 0.8) +
geom_text(aes(label = paste0("£", round(Total_Revenue/1000, 1), "K")),
hjust = -0.1, size = 4, fontface = "bold") +
coord_flip() +
scale_fill_brewer(type = "qual", palette = "Set2") +
scale_y_continuous(labels = dollar_format(prefix = "£", scale = 1e-3, suffix = "K")) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank()) +
labs(
title = "Total Revenue by Customer Segment",
subtitle = "Champions and Loyal Customers drive the majority of revenue",
x = "Customer Segment",
y = "Total Revenue (£K)",
caption = "Source: RFM Analysis - UK Customers"
)
p_revenue_segment <- ggplot(segment_summary, aes(x = reorder(Customer_Segment, Total_Revenue),
y = Total_Revenue,
fill = Customer_Segment)) +
geom_col(alpha = 0.8) +
geom_text(aes(label = paste0("£", round(Total_Revenue/1000, 1), "K")),
hjust = -0.1, size = 4, fontface = "bold") +
coord_flip() +
scale_fill_brewer(type = "qual", palette = "Set2") +
scale_y_continuous(labels = dollar_format(prefix = "£", scale = 1e-3, suffix = "K")) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank()) +
labs(
title = "Total Revenue by Customer Segment",
subtitle = "Champions and Loyal Customers drive the majority of revenue",
x = "Customer Segment",
y = "Total Revenue (£K)",
caption = "Source: RFM Analysis - UK Customers"
)
########################################################################################################
# Plot 4: Recency vs Monetary (Risk Analysis)
p_risk_analysis <- ggplot(rfm, aes(x = Recency, y = Monetary)) +
geom_point(aes(size = Frequency, color = RFM_Score), alpha = 0.6) +
scale_color_gradient2(low = "red", mid = "yellow", high = "green",
midpoint = median(rfm$RFM_Score)) +
scale_y_log10(labels = dollar_format(prefix = "£")) +
scale_size_continuous(range = c(1, 8)) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "right"
) +
labs(
title = "Customer Risk vs Value Analysis",
subtitle = "Red = High Risk, Green = High Value, Size = Purchase Frequency",
x = "Days Since Last Purchase (Recency)",
y = "Total Customer Value (£) - Log Scale",
color = "RFM Score",
size = "Frequency"
)
# Plot 5: Key Metrics Summary Table (for presentation)
metrics_summary <- data.frame(
Metric = c("Total Customers", "Total Revenue", "Avg Revenue/Customer",
"Champions (%)", "At Risk (%)", "Avg Recency (days)"),
Value = c(
nrow(rfm),
paste0("£", format(sum(rfm$Monetary), big.mark = ",")),
paste0("£", format(round(mean(rfm$Monetary)), big.mark = ",")),
paste0(round(sum(segment_summary$Customer_Count[segment_summary$Customer_Segment == "Champions"]) /
nrow(rfm) * 100, 1), "%"),
paste0(round(sum(segment_summary$Customer_Count[segment_summary$Customer_Segment == "At Risk"]) /
nrow(rfm) * 100, 1), "%"),
round(mean(rfm$Recency))
)
)
# Main dashboard (combine key plots)
executive_dashboard <- grid.arrange(
p_revenue_segment,
p_customer_count,
p_rfm_distribution,
p_risk_analysis,
ncol = 2,
nrow = 2,
top = textGrob("RFM Customer Analysis Dashboard",
gp = gpar(fontsize = 20, fontface = "bold"))
)
# Main dashboard (combine key plots)
executive_dashboard <- grid.arrange(
p_revenue_segment,
p_customer_count,
p_rfm_distribution,
p_risk_analysis,
ncol = 2,
nrow = 2,
top = textGrob("RFM Customer Analysis Dashboard",
gp = gpar(fontsize = 20, fontface = "bold"))
)
# 4. ACTIONABLE INSIGHTS SUMMARY
insights_data <- data.frame(
Segment = c("Champions", "Loyal Customers", "At Risk", "Lost Customers"),
Action = c("Reward & Retain", "Upsell & Cross-sell", "Win-back Campaign", "Reactivation Effort"),
Priority = c("High", "High", "Medium", "Low"),
Expected_ROI = c("High", "Medium-High", "Medium", "Low")
)
print(insights_data)
# 5. INTERACTIVE PLOTLY VERSION (Optional)
# Convert main plots to interactive for digital presentations
interactive_revenue <- ggplotly(p_revenue_segment)
interactive_risk <- ggplotly(p_risk_analysis)
# Save plots for presentation
ggsave("rfm_executive_dashboard.png", executive_dashboard, width = 16, height = 12, dpi = 300)
ggsave("revenue_by_segment.png", p_revenue_segment, width = 12, height = 8, dpi = 300)
ggsave("risk_analysis.png", p_risk_analysis, width = 12, height = 8, dpi = 300)
# Display the main dashboard
print(executive_dashboard)
p1 <- ggplot(rfm, aes(x = Recency)) +
geom_histogram(fill = "orange", bins = 30) +
theme_minimal() +
labs(title = "Recency Distribution",
x = "Days Since Last Purchase",
y = "Number of Customers")
gridExtra::grid.arrange(p1, p2, p3, ncol = 3)
install.packages("treemap")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(treemap)
library(RColorBrewer)
################################################################################
rfm_segments <- rfm %>%
mutate(
Customer_Segment = case_when(
RFM_Score >= 13 ~ "Champions",
RFM_Score >= 11 ~ "Loyal Customers",
RFM_Score >= 9 ~ "Potential Loyalists",
RFM_Score >= 7 ~ "New Customers",
RFM_Score >= 5 ~ "At Risk",
TRUE ~ "Lost Customers"
)
)
################################################################################
rfm_segments <- rfm %>%
mutate(
Customer_Segment = case_when(
RFM_Score >= 13 ~ "Champions",
RFM_Score >= 11 ~ "Loyal Customers",
RFM_Score >= 9 ~ "Potential Loyalists",
RFM_Score >= 7 ~ "New Customers",
RFM_Score >= 5 ~ "At Risk",
TRUE ~ "Lost Customers"
)
)
rfm <- sales %>%
group_by(CustomerID) %>%
summarise(
Recency = as.integer(difftime(max_date, max(InvoiceDate), units = "days")),
Frequency = n_distinct(StockCode),                 # simple proxy
Monetary = sum(Revenue, na.rm = TRUE)
) %>%
mutate(
R_Score = ntile(-Recency, 5),                      # lower recency -> higher score
F_Score = ntile(Frequency, 5),
M_Score = ntile(Monetary, 5),
RFM_Score = R_Score + F_Score + M_Score
) %>%
arrange(desc(RFM_Score))
library(DBI)
library(ggplot2)
library(dplyr)
library(scales)
library(RMariaDB)
library(lubridate)
library(openxlsx)
library(gridExtra)
library(ggplot2)
library(plotly)
library(treemap)
################################################################################
rfm_segments <- rfm %>%
mutate(
Customer_Segment = case_when(
RFM_Score >= 13 ~ "Champions",
RFM_Score >= 11 ~ "Loyal Customers",
RFM_Score >= 9 ~ "Potential Loyalists",
RFM_Score >= 7 ~ "New Customers",
RFM_Score >= 5 ~ "At Risk",
TRUE ~ "Lost Customers"
)
)
segment_summary <- rfm_segments %>%
group_by(Customer_Segment) %>%
summarise(
Customer_Count = n(),
Avg_Monetary = mean(Monetary, na.rm = TRUE),
Total_Revenue = sum(Monetary, na.rm = TRUE),
Avg_Frequency = mean(Frequency, na.rm = TRUE),
Avg_Recency = mean(Recency, na.rm = TRUE),
.groups = 'drop'
) %>%
arrange(desc(Total_Revenue))
View(rfm_segments)
p_revenue_segment <- ggplot(segment_summary, aes(x = reorder(Customer_Segment, Total_Revenue),
y = Total_Revenue,
fill = Customer_Segment)) +
geom_col(alpha = 0.8) +
geom_text(aes(label = paste0("£", round(Total_Revenue/1000, 1), "K")),
hjust = -0.1, size = 4, fontface = "bold") +
coord_flip() +
scale_fill_brewer(type = "qual", palette = "Set2") +
scale_y_continuous(labels = dollar_format(prefix = "£", scale = 1e-3, suffix = "K")) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank()
) +
labs(
title = "Total Revenue by Customer Segment",
subtitle = "Champions and Loyal Customers drive the majority of revenue",
x = "Customer Segment",
y = "Total Revenue (£K)",
caption = "Source: RFM Analysis - UK Customers"
)
print(p_revenue_segment)
p_revenue_segment <- ggplot(segment_summary,
aes(x = reorder(Customer_Segment, Total_Revenue),
y = Total_Revenue,
fill = Customer_Segment)) +
geom_col(alpha = 0.8) +
geom_text(aes(label = paste0("£", round(Total_Revenue/1000, 1), "K")),
hjust = -0.1, size = 4, fontface = "bold") +
coord_flip() +
scale_fill_brewer(type = "qual", palette = "Set2") +
scale_y_continuous(labels = dollar_format(prefix = "£", scale = 1e-3, suffix = "K")) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank()
) +
labs(
title = "Total Revenue by Customer Segment",
subtitle = "Champions and Loyal Customers drive the majority of revenue",
x = "Customer Segment",
y = "Total Revenue (£K)",
caption = "Source: RFM Analysis - UK Customers"
)
# 7. Display the plot
print(p_revenue_segment)
View(segment_summary)
View(rfm_segments)
print(p_customer_count)
p_customer_count <- ggplot(segment_summary, aes(x = reorder(Customer_Segment, Customer_Count),
y = Customer_Count,
fill = Customer_Segment)) +
geom_col(alpha = 0.8) +
geom_text(aes(label = Customer_Count), hjust = -0.1, size = 4, fontface = "bold") +
coord_flip() +
scale_fill_brewer(type = "qual", palette = "Set2") +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank()
) +
labs(
title = "Customer Count by Segment",
subtitle = "Understanding the size of each customer group",
x = "Customer Segment",
y = "Number of Customers"
)
print(p_customer_count)
p_customer_count <- ggplot(segment_summary, aes(x = reorder(Customer_Segment, Customer_Count),
y = Customer_Count,
fill = Customer_Segment)) +
geom_col(alpha = 0.8) +
geom_text(aes(label = Customer_Count), hjust = -0.1, size = 4, fontface = "bold") +
scale_fill_brewer(type = "qual", palette = "Set2") +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "none",
panel.grid.minor = element_blank()
) +
labs(
title = "Customer Count by Segment",
subtitle = "Understanding the size of each customer group",
x = "Customer Segment",
y = "Number of Customers"
)
print(p_customer_count)
print(p_rfm_distribution)
p_rfm_distribution <- ggplot(rfm, aes(x = RFM_Score)) +
geom_histogram(binwidth = 1, fill = "steelblue", alpha = 0.7, color = "white") +
geom_vline(aes(xintercept = mean(RFM_Score)), color = "red", linetype = "dashed", size = 1) +
annotate("text", x = mean(rfm$RFM_Score) + 0.5, y = max(table(rfm$RFM_Score)) * 0.8,
label = paste("Mean:", round(mean(rfm$RFM_Score), 1)), color = "red", size = 4) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
panel.grid.minor = element_blank()
) +
labs(
title = "Distribution of Customer Value Scores",
subtitle = "Higher scores indicate more valuable customers",
x = "RFM Score (3-15 scale)",
y = "Number of Customers"
)
print(p_rfm_distribution)
p_risk_analysis <- ggplot(rfm, aes(x = Recency, y = Monetary)) +
geom_point(aes(size = Frequency, color = RFM_Score), alpha = 0.6) +
scale_color_gradient2(low = "red", mid = "yellow", high = "green",
midpoint = median(rfm$RFM_Score)) +
scale_y_log10(labels = dollar_format(prefix = "£")) +
scale_size_continuous(range = c(1, 8)) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "right"
) +
labs(
title = "Customer Risk vs Value Analysis",
subtitle = "Red = High Risk, Green = High Value, Size = Purchase Frequency",
x = "Days Since Last Purchase (Recency)",
y = "Total Customer Value (£) - Log Scale",
color = "RFM Score",
size = "Frequency"
)
print(p_risk_analysis)
p_risk_analysis <- ggplot(rfm, aes(x = Recency, y = Monetary)) +
geom_point(aes(size = Frequency, color = RFM_Score), alpha = 0.6) +
scale_color_gradient2(low = "red", mid = "yellow", high = "green",
midpoint = median(rfm$RFM_Score)) +
scale_y_log10(labels = dollar_format(prefix = "£")) +
scale_size_continuous(range = c(1, 8)) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(size = 16, face = "bold"),
legend.position = "right"
) +
labs(
title = "Customer Risk vs Value Analysis",
subtitle = "Red = High Risk, Green = High Value, Size = Purchase Frequency",
x = "Days Since Last Purchase (Recency)",
y = "Total Customer Value (£) - Log Scale",
color = "RFM Score",
size = "Frequency"
)
print(p_risk_analysis)
metrics_summary <- data.frame(
Metric = c("Total Customers", "Total Revenue", "Avg Revenue/Customer",
"Champions (%)", "At Risk (%)", "Avg Recency (days)"),
Value = c(
nrow(rfm),
paste0("£", format(sum(rfm$Monetary), big.mark = ",")),
paste0("£", format(round(mean(rfm$Monetary)), big.mark = ",")),
paste0(round(sum(segment_summary$Customer_Count[segment_summary$Customer_Segment == "Champions"]) /
nrow(rfm) * 100, 1), "%"),
paste0(round(sum(segment_summary$Customer_Count[segment_summary$Customer_Segment == "At Risk"]) /
nrow(rfm) * 100, 1), "%"),
round(mean(rfm$Recency))
)
)
View(metrics_summary)
View(p_metrics_table)
metrics_summary <- data.frame(
Metric = c("Total Customers", "Total Revenue", "Avg Revenue/Customer",
"Champions (%)", "At Risk (%)", "Avg Recency (days)"),
Value = c(
nrow(rfm),
paste0("£", format(sum(rfm$Monetary), big.mark = ",")),
paste0("£", format(round(mean(rfm$Monetary)), big.mark = ",")),
paste0(round(sum(segment_summary$Customer_Count[segment_summary$Customer_Segment == "Champions"]) /
nrow(rfm) * 100, 1), "%"),
paste0(round(sum(segment_summary$Customer_Count[segment_summary$Customer_Segment == "At Risk"]) /
nrow(rfm) * 100, 1), "%"),
round(mean(rfm$Recency))
)
)
p_metrics_table <- gridExtra::tableGrob(metrics_summary, rows = NULL,
theme = gridExtra::ttheme_default(
core = list(fg_params = list(fontsize = 12)),
colhead = list(fg_params = list(fontsize = 12, fontface = "bold"))
))
print(p_risk_analysis)
